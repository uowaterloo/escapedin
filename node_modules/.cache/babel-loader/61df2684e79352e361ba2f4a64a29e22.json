{"ast":null,"code":"var _jsxFileName = \"/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/panels/BombRoom.js\";\nimport React, { useContext, useState, useEffect, useRef } from \"react\";\nimport { Container as InteractiveImageContainer } from \"../shared/interactive-image\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { StateContext, ActionTypes } from \"../util/useApplicationState\";\nimport styled from \"styled-components\";\nimport { useStopwatch } from \"react-timer-hook\";\nconst Container = styled(InteractiveImageContainer)`\n  background-image: url(\"/office/bombdefusalUI.jpg\");\n`;\nconst TimerWrapper = styled.div`\n  position: absolute;\n  left: auto;\n  right: auto;\n  top: 55%;\n  bottom: auto;\n\n  display: grid;\n  grid-template: 1fr / repeat(4, 1fr);\n  grid-gap: 10%;\n\n  & > p {\n    color: red;\n    border: none;\n    text-transform: uppercase;\n  }\n`;\nconst InputWrapper = styled.div`\n  position: absolute;\n  left: 18.5%;\n  right: 18.5%;\n  top: 80%;\n  bottom: 14.5%;\n\n  display: grid;\n  grid-template: 1fr / repeat(4, 1fr);\n  grid-gap: 3.5%;\n\n  & > input {\n    color: #000;\n    border: none;\n    text-transform: uppercase;\n  }\n`;\nconst unlockCode = [\"stay\", \"hom\", \"fur\", \"evr\"];\nexport default function BombRoom() {\n  const [dataInput, _setDataInput] = useState([\"\", \"\", \"\", \"\"]);\n  const timeoutRef = useRef();\n\n  const setData = (index, value) => {\n    _setDataInput(prevVal => {\n      const newArr = [...prevVal];\n      newArr[index] = value;\n      return newArr;\n    });\n  };\n\n  useEffect(() => {\n    const isValid = dataInput.every((value, index) => unlockCode[index].toLowerCase() === value.toLowerCase());\n\n    if (isValid) {\n      timeoutRef.current = setTimeout(() => {\n        alert(\"Puzzle unlocked\");\n      }, 250);\n    }\n  }, [dataInput]);\n  useEffect(() => () => timeoutRef.current && clearTimeout(timeoutRef.current), []); // const { seconds, start, reset } = useStopwatch();\n  // const hours = Math.floor(seconds / 3600);\n  // const minutes = Math.floor((seconds % 3600) / 60);\n  // const second = (seconds % 3600) % 60;\n  // const formattedTime =\n  //   second < 10\n  //     ? `${hours}:${minutes}:0${second}`\n  //     : `${hours}:${minutes}:${second}`;\n\n  const {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning,\n    start,\n    pause,\n    reset\n  } = useStopwatch({\n    autoStart: true\n  });\n  const formattedTime = seconds < 10 ? `${hours}:${minutes}:0${seconds}` : `${hours}:${minutes}:${seconds}`;\n  return /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(TimerWrapper, null, /*#__PURE__*/React.createElement(\"p\", null, \" \", hours, \" \"), /*#__PURE__*/React.createElement(\"p\", null, \" \", minutes, \" \"), /*#__PURE__*/React.createElement(\"p\", null, \" \", seconds, \" \")), /*#__PURE__*/React.createElement(InputWrapper, null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: dataInput[0],\n    onChange: e => setData(0, e.target.value)\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: dataInput[1],\n    onChange: e => setData(1, e.target.value)\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: dataInput[2],\n    onChange: e => setData(2, e.target.value)\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: dataInput[3],\n    onChange: e => setData(3, e.target.value)\n  })));\n}","map":{"version":3,"sources":["/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/panels/BombRoom.js"],"names":["React","useContext","useState","useEffect","useRef","Container","InteractiveImageContainer","Link","useHistory","StateContext","ActionTypes","styled","useStopwatch","TimerWrapper","div","InputWrapper","unlockCode","BombRoom","dataInput","_setDataInput","timeoutRef","setData","index","value","prevVal","newArr","isValid","every","toLowerCase","current","setTimeout","alert","clearTimeout","seconds","minutes","hours","days","isRunning","start","pause","reset","autoStart","formattedTime","e","target"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport { Container as InteractiveImageContainer } from \"../shared/interactive-image\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { StateContext, ActionTypes } from \"../util/useApplicationState\";\nimport styled from \"styled-components\";\nimport { useStopwatch } from \"react-timer-hook\";\n\nconst Container = styled(InteractiveImageContainer)`\n  background-image: url(\"/office/bombdefusalUI.jpg\");\n`;\n\nconst TimerWrapper = styled.div`\n  position: absolute;\n  left: auto;\n  right: auto;\n  top: 55%;\n  bottom: auto;\n\n  display: grid;\n  grid-template: 1fr / repeat(4, 1fr);\n  grid-gap: 10%;\n\n  & > p {\n    color: red;\n    border: none;\n    text-transform: uppercase;\n  }\n`;\n\nconst InputWrapper = styled.div`\n  position: absolute;\n  left: 18.5%;\n  right: 18.5%;\n  top: 80%;\n  bottom: 14.5%;\n\n  display: grid;\n  grid-template: 1fr / repeat(4, 1fr);\n  grid-gap: 3.5%;\n\n  & > input {\n    color: #000;\n    border: none;\n    text-transform: uppercase;\n  }\n`;\n\nconst unlockCode = [\"stay\", \"hom\", \"fur\", \"evr\"];\n\nexport default function BombRoom() {\n  const [dataInput, _setDataInput] = useState([\"\", \"\", \"\", \"\"]);\n  const timeoutRef = useRef();\n\n  const setData = (index, value) => {\n    _setDataInput((prevVal) => {\n      const newArr = [...prevVal];\n      newArr[index] = value;\n      return newArr;\n    });\n  };\n\n  useEffect(() => {\n    const isValid = dataInput.every(\n      (value, index) => unlockCode[index].toLowerCase() === value.toLowerCase()\n    );\n\n    if (isValid) {\n      timeoutRef.current = setTimeout(() => {\n        alert(\"Puzzle unlocked\");\n      }, 250);\n    }\n  }, [dataInput]);\n\n  useEffect(\n    () => () => timeoutRef.current && clearTimeout(timeoutRef.current),\n    []\n  );\n\n  // const { seconds, start, reset } = useStopwatch();\n\n  // const hours = Math.floor(seconds / 3600);\n  // const minutes = Math.floor((seconds % 3600) / 60);\n  // const second = (seconds % 3600) % 60;\n\n  // const formattedTime =\n  //   second < 10\n  //     ? `${hours}:${minutes}:0${second}`\n  //     : `${hours}:${minutes}:${second}`;\n\n  const {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning,\n    start,\n    pause,\n    reset,\n  } = useStopwatch({ autoStart: true });\n\n  const formattedTime =\n    seconds < 10\n      ? `${hours}:${minutes}:0${seconds}`\n      : `${hours}:${minutes}:${seconds}`;\n\n  return (\n    <Container>\n      <TimerWrapper>\n        <p> {hours} </p>\n        <p> {minutes} </p>\n        <p> {seconds} </p>\n      </TimerWrapper>\n\n      <InputWrapper>\n        <input\n          type=\"text\"\n          value={dataInput[0]}\n          onChange={(e) => setData(0, e.target.value)}\n        />\n        <input\n          type=\"text\"\n          value={dataInput[1]}\n          onChange={(e) => setData(1, e.target.value)}\n        />\n        <input\n          type=\"text\"\n          value={dataInput[2]}\n          onChange={(e) => setData(2, e.target.value)}\n        />\n        <input\n          type=\"text\"\n          value={dataInput[3]}\n          onChange={(e) => setData(3, e.target.value)}\n        />\n      </InputWrapper>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}