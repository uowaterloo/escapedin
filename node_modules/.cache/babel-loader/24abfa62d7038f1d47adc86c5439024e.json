{"ast":null,"code":"var _jsxFileName = \"/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/map-view/MappedinMapview.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Mappedin from \"@mappedin/mappedin-js/builds/mappedin\";\nexport default function MapManager({\n  options,\n  onLoad = x => x,\n  className,\n  selectedMap\n}) {\n  const elementRef = useRef();\n  const [sdkData, setSdkData] = useState(null); // Initialize the map on load\n\n  useEffect(() => {\n    Mappedin.initialize(options, elementRef.current).then(data => {\n      onLoad(data);\n      setSdkData(data);\n    }).catch(error => console.error(error));\n  }, []);\n  useEffect(() => {\n    if (selectedMap && sdkData) {\n      sdkData.mapview.setMap(selectedMap);\n    }\n  }, [selectedMap]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: elementRef,\n    className: className,\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/map-view/MappedinMapview.js"],"names":["React","useRef","useState","useEffect","Mappedin","MapManager","options","onLoad","x","className","selectedMap","elementRef","sdkData","setSdkData","initialize","current","then","data","catch","error","console","mapview","setMap","width","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,uCAArB;AAEA,eAAe,SAASC,UAAT,CAAoB;AACjCC,EAAAA,OADiC;AAEjCC,EAAAA,MAAM,GAAIC,CAAD,IAAOA,CAFiB;AAGjCC,EAAAA,SAHiC;AAIjCC,EAAAA;AAJiC,CAApB,EAKZ;AACD,QAAMC,UAAU,GAAGV,MAAM,EAAzB;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC,CAFC,CAID;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,QAAQ,CAACU,UAAT,CAAoBR,OAApB,EAA6BK,UAAU,CAACI,OAAxC,EACGC,IADH,CACSC,IAAD,IAAU;AACdV,MAAAA,MAAM,CAACU,IAAD,CAAN;AACAJ,MAAAA,UAAU,CAACI,IAAD,CAAV;AACD,KAJH,EAKGC,KALH,CAKUC,KAAD,IAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CALpB;AAMD,GAPQ,EAON,EAPM,CAAT;AASAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,WAAW,IAAIE,OAAnB,EAA4B;AAC1BA,MAAAA,OAAO,CAACS,OAAR,CAAgBC,MAAhB,CAAuBZ,WAAvB;AACD;AACF,GAJQ,EAIN,CAACA,WAAD,CAJM,CAAT;AAMA,sBACE;AACE,IAAA,GAAG,EAAEC,UADP;AAEE,IAAA,SAAS,EAAEF,SAFb;AAGE,IAAA,KAAK,EAAE;AACLc,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE;AAFH,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport Mappedin from \"@mappedin/mappedin-js/builds/mappedin\";\n\nexport default function MapManager({\n  options,\n  onLoad = (x) => x,\n  className,\n  selectedMap,\n}) {\n  const elementRef = useRef();\n  const [sdkData, setSdkData] = useState(null);\n\n  // Initialize the map on load\n  useEffect(() => {\n    Mappedin.initialize(options, elementRef.current)\n      .then((data) => {\n        onLoad(data);\n        setSdkData(data);\n      })\n      .catch((error) => console.error(error));\n  }, []);\n\n  useEffect(() => {\n    if (selectedMap && sdkData) {\n      sdkData.mapview.setMap(selectedMap);\n    }\n  }, [selectedMap]);\n\n  return (\n    <div\n      ref={elementRef}\n      className={className}\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n      }}\n    ></div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}