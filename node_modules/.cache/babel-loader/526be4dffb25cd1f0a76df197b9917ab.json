{"ast":null,"code":"var _jsxFileName = \"/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/location-screens/fantasy-wall.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport InteractiveImage from \"../interactive-image\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { StateContext, ActionTypes } from \"../../hooks/useApplicationState\";\nimport styled from \"styled-components\";\nconst InputContainer = styled.div`\n  display: flex;\n  input {\n    margin-right: 24px;\n  }\n\n  p {\n    margin-right: 12px;\n  }\n`;\nexport default function FantasyWall() {\n  const history = useHistory();\n  const {\n    state,\n    dispatch\n  } = useContext(StateContext);\n  const [codeInput, setCodeInput] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [colorState, setColorState] = useState(\"white\");\n  const [backgroundPath, setBackgroundPath] = useState(\"./office/FantasyMap.jpg\");\n  useEffect(() => {\n    if (codeInput == \"n3i6u5\") {\n      setTimeout(() => {//dispatch({ type: \"SET_STATE\", payload: \"LOCKSCREEN\" });\n        //  history.push(\"/pet_wall_answer\");\n      }, 150);\n    }\n\n    if (codeInput > \"0\") {\n      setTimeout(() => {\n        setColorState(\"red\");\n      }, 500);\n    }\n  }, [codeInput]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InteractiveImage, {\n    animationPlay: true,\n    src: backgroundPath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Grid Code:\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    onChange: e => {\n      setInput(e.target.value);\n      setColorState(\"white\");\n    },\n    style: {\n      backgroundColor: colorState\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setCodeInput(input);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Enter Code\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setBackgroundPath(\"./office/morse_scroll_minimal.png\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Show Scroll\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setBackgroundPath(\"./office/FantasyMap.jpg\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Hide Scroll\"))));\n}","map":{"version":3,"sources":["/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/location-screens/fantasy-wall.js"],"names":["React","useContext","useState","useEffect","InteractiveImage","Link","useHistory","StateContext","ActionTypes","styled","InputContainer","div","FantasyWall","history","state","dispatch","codeInput","setCodeInput","input","setInput","colorState","setColorState","backgroundPath","setBackgroundPath","setTimeout","e","target","value","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,iCAA1C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,cAAc,GAAGD,MAAM,CAACE,GAAI;;;;;;;;;CAAlC;AAWA,eAAe,SAASC,WAAT,GAAuB;AACpC,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM;AAAEQ,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBd,UAAU,CAACM,YAAD,CAAtC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,OAAD,CAA5C;AACA,QAAM,CAACoB,cAAD,EAAiBC,iBAAjB,IAAsCrB,QAAQ,CAClD,yBADkD,CAApD;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,SAAS,IAAI,QAAjB,EAA2B;AACzBQ,MAAAA,UAAU,CAAC,MAAM,CACf;AACA;AACD,OAHS,EAGP,GAHO,CAAV;AAID;;AACD,QAAIR,SAAS,GAAG,GAAhB,EAAqB;AACnBQ,MAAAA,UAAU,CAAC,MAAM;AACfH,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAFS,EAEP,GAFO,CAAV;AAGD;AACF,GAZQ,EAYN,CAACL,SAAD,CAZM,CAAT;AAcA,sBACE,uDACE,oBAAC,gBAAD;AAAkB,IAAA,aAAa,EAAE,IAAjC;AAAuC,IAAA,GAAG,EAAEM,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,IAAA,KAAK,EAAEJ,KADT;AAEE,IAAA,QAAQ,EAAGO,CAAD,IAAO;AACfN,MAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACAN,MAAAA,aAAa,CAAC,OAAD,CAAb;AACD,KALH;AAME,IAAA,KAAK,EAAE;AAAEO,MAAAA,eAAe,EAAER;AAAnB,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAUE;AACE,IAAA,OAAO,EAAE,MAAM;AACbH,MAAAA,YAAY,CAACC,KAAD,CAAZ;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,eAiBE;AACE,IAAA,OAAO,EAAE,MAAM;AACbK,MAAAA,iBAAiB,CAAC,mCAAD,CAAjB;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAjBF,eAwBE;AACE,IAAA,OAAO,EAAE,MAAM;AACbA,MAAAA,iBAAiB,CAAC,yBAAD,CAAjB;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAxBF,CADF,CADF,CADF;AAsCD","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport InteractiveImage from \"../interactive-image\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { StateContext, ActionTypes } from \"../../hooks/useApplicationState\";\nimport styled from \"styled-components\";\n\nconst InputContainer = styled.div`\n  display: flex;\n  input {\n    margin-right: 24px;\n  }\n\n  p {\n    margin-right: 12px;\n  }\n`;\n\nexport default function FantasyWall() {\n  const history = useHistory();\n  const { state, dispatch } = useContext(StateContext);\n  const [codeInput, setCodeInput] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [colorState, setColorState] = useState(\"white\");\n  const [backgroundPath, setBackgroundPath] = useState(\n    \"./office/FantasyMap.jpg\"\n  );\n  useEffect(() => {\n    if (codeInput == \"n3i6u5\") {\n      setTimeout(() => {\n        //dispatch({ type: \"SET_STATE\", payload: \"LOCKSCREEN\" });\n        //  history.push(\"/pet_wall_answer\");\n      }, 150);\n    }\n    if (codeInput > \"0\") {\n      setTimeout(() => {\n        setColorState(\"red\");\n      }, 500);\n    }\n  }, [codeInput]);\n\n  return (\n    <>\n      <InteractiveImage animationPlay={true} src={backgroundPath}>\n        <InputContainer>\n          <p>Grid Code:</p>\n          <input\n            value={input}\n            onChange={(e) => {\n              setInput(e.target.value);\n              setColorState(\"white\");\n            }}\n            style={{ backgroundColor: colorState }}\n          />\n          <button\n            onClick={() => {\n              setCodeInput(input);\n            }}\n          >\n            Enter Code\n          </button>\n          <button\n            onClick={() => {\n              setBackgroundPath(\"./office/morse_scroll_minimal.png\");\n            }}\n          >\n            Show Scroll\n          </button>\n          <button\n            onClick={() => {\n              setBackgroundPath(\"./office/FantasyMap.jpg\");\n            }}\n          >\n            Hide Scroll\n          </button>\n        </InputContainer>\n      </InteractiveImage>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}