{"ast":null,"code":"var _jsxFileName = \"/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/lock-screen/unlock-screen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { StateContext, ActionTypes } from \"../../hooks/useApplicationState\";\nimport StatusBar from \"../ui/statusbar\";\nimport { IoMdLock, IoMdUnlock } from \"react-icons/io\";\nimport { FaRegCircle, FaCircle } from \"react-icons/fa\";\nimport { CancelButton, PasscodeInputWrapper } from \"./index.style.js\";\nconst Wrapper = styled(motion.div)`\n  width: 100%;\n  height: 100%;\n  background-color: rgba(127, 208, 248, 0.5);\n  backdrop-filter: blur(8px) contrast(1.5) brightness(0.6);\n  z-index: 1;\n  color: #fff;\n  opacity: 0;\n  position: relative;\n`;\nexport const LockStatusContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  max-width: 60%;\n  margin: 16px auto;\n\n  & > * {\n    margin: 0px 4px;\n  }\n  font-size: 32px;\n\n  @media (max-height: 650px) {\n    margin: 0px auto 8px auto;\n    max-width: 100%;\n  }\n`;\nconst LockBigText = styled.p`\n  font-size: 18px;\n  margin-top: 8px;\n  font-weight: 300;\n`;\nconst LockSmallText = styled(LockBigText)`\n  font-size: 14px;\n`;\nconst DotsContainer = styled(motion.div)`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n\n  width: 66%;\n  height: 16px;\n  margin: 0 auto 32px auto;\n  font-size: 14px;\n\n  & > div {\n    display: flex;\n    justify-content: center;\n  }\n\n  @media (max-height: 650px) {\n    font-size: 9px;\n    margin-bottom: 2.5vh;\n  }\n`;\nconst variants = {\n  visible: {\n    opacity: 1\n  },\n  hidden: {\n    opacity: 0,\n    transition: {\n      delay: 0.3\n    }\n  }\n};\nexport default function Component({\n  onSuccess = () => null,\n  passcode = \"7738\"\n}) {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isUnlocked, setIsUnlocked] = useState(false);\n  const {\n    dispatch\n  } = React.useContext(StateContext);\n\n  const handlePasscodeInput = (event, char) => {\n    event.stopPropagation();\n    event.preventDefault();\n    console.log(\"called\");\n    setInputValue(prevVal => {\n      if (prevVal.length < passcode.length) {\n        const newValue = prevVal + char.toString();\n        return newValue;\n      } else {\n        return prevVal;\n      }\n    });\n  };\n\n  const dotAnimation = useAnimation();\n  useEffect(() => {\n    console.log(inputValue);\n\n    if (inputValue.length === passcode.length) {\n      if (inputValue === passcode) {\n        setIsUnlocked(true);\n        dotAnimation.start({\n          opacity: 0,\n          transition: {\n            duration: 0.3,\n            delay: 0.2\n          }\n        });\n        setTimeout(() => {\n          onSuccess();\n        }, 750);\n      } else {\n        setInputValue(\"\");\n        dotAnimation.start({\n          x: [10, -10, 10, -10, 10, -10, 10, -10, 0],\n          transition: {\n            duration: 0.5\n          }\n        });\n      }\n    }\n  }, [inputValue]);\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    key: \"unlock-screen\",\n    variants: variants,\n    intial: \"hidden\",\n    animate: \"visible\",\n    exit: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StatusBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LockStatusContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, isUnlocked ? /*#__PURE__*/React.createElement(IoMdUnlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(IoMdLock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 40\n    }\n  }), /*#__PURE__*/React.createElement(LockBigText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, \"Enter Passcode\"), /*#__PURE__*/React.createElement(LockSmallText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, \"Your passcode is required to unlock this device\")), /*#__PURE__*/React.createElement(DotsContainer, {\n    animate: dotAnimation,\n    initial: {\n      opacity: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, inputValue.length >= 1 ? /*#__PURE__*/React.createElement(FaCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 40\n    }\n  }) : /*#__PURE__*/React.createElement(FaRegCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 55\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, inputValue.length >= 2 ? /*#__PURE__*/React.createElement(FaCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 40\n    }\n  }) : /*#__PURE__*/React.createElement(FaRegCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 55\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, inputValue.length >= 3 ? /*#__PURE__*/React.createElement(FaCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 40\n    }\n  }) : /*#__PURE__*/React.createElement(FaRegCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 55\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, inputValue.length >= 4 ? /*#__PURE__*/React.createElement(FaCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 40\n    }\n  }) : /*#__PURE__*/React.createElement(FaRegCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 55\n    }\n  }))), /*#__PURE__*/React.createElement(PasscodeInputWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      gridRow: \"1\",\n      gridColumn: \"1\",\n      width: 0,\n      paddingBottom: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }), [...Array(10)].map((e, i) => /*#__PURE__*/React.createElement(\"button\", {\n    key: i,\n    onClick: event => handlePasscodeInput(event, (i + 1) % 10),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, (i + 1) % 10))), /*#__PURE__*/React.createElement(CancelButton, {\n    onClick: () => {\n      dispatch({\n        type: ActionTypes.setState,\n        payload: \"LOCKSCREEN\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, \"Cancel\"));\n}","map":{"version":3,"sources":["/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/lock-screen/unlock-screen.js"],"names":["React","useState","useEffect","styled","motion","useAnimation","StateContext","ActionTypes","StatusBar","IoMdLock","IoMdUnlock","FaRegCircle","FaCircle","CancelButton","PasscodeInputWrapper","Wrapper","div","LockStatusContainer","LockBigText","p","LockSmallText","DotsContainer","variants","visible","opacity","hidden","transition","delay","Component","onSuccess","passcode","inputValue","setInputValue","isUnlocked","setIsUnlocked","dispatch","useContext","handlePasscodeInput","event","char","stopPropagation","preventDefault","console","log","prevVal","length","newValue","toString","dotAnimation","start","duration","setTimeout","x","gridRow","gridColumn","width","paddingBottom","Array","map","e","i","type","setState","payload"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { StateContext, ActionTypes } from \"../../hooks/useApplicationState\";\nimport StatusBar from \"../ui/statusbar\";\nimport { IoMdLock, IoMdUnlock } from \"react-icons/io\";\nimport { FaRegCircle, FaCircle } from \"react-icons/fa\";\nimport { CancelButton, PasscodeInputWrapper } from \"./index.style.js\"\n\nconst Wrapper = styled(motion.div)`\n  width: 100%;\n  height: 100%;\n  background-color: rgba(127, 208, 248, 0.5);\n  backdrop-filter: blur(8px) contrast(1.5) brightness(0.6);\n  z-index: 1;\n  color: #fff;\n  opacity: 0;\n  position: relative;\n`;\n\nexport const LockStatusContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  max-width: 60%;\n  margin: 16px auto;\n\n  & > * {\n    margin: 0px 4px;\n  }\n  font-size: 32px;\n\n  @media (max-height: 650px) {\n    margin: 0px auto 8px auto;\n    max-width: 100%;\n  }\n`;\n\nconst LockBigText = styled.p`\n  font-size: 18px;\n  margin-top: 8px;\n  font-weight: 300;\n`;\n\nconst LockSmallText = styled(LockBigText)`\n  font-size: 14px;\n`;\n\nconst DotsContainer = styled(motion.div)`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n\n  width: 66%;\n  height: 16px;\n  margin: 0 auto 32px auto;\n  font-size: 14px;\n\n  & > div {\n    display: flex;\n    justify-content: center;\n  }\n\n  @media (max-height: 650px) {\n    font-size: 9px;\n    margin-bottom: 2.5vh;\n  }\n`;\n\n\nconst variants = {\n  visible: {\n    opacity: 1,\n  },\n  hidden: {\n    opacity: 0,\n    transition: {\n      delay: 0.3,\n    },\n  },\n};\n\nexport default function Component({\n  onSuccess = () => null,\n  passcode = \"7738\",\n}) {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isUnlocked, setIsUnlocked] = useState(false);\n\n  const { dispatch } = React.useContext(StateContext);\n\n  const handlePasscodeInput = (event, char) => {\n    event.stopPropagation();\n    event.preventDefault();\n    console.log(\"called\");\n\n    setInputValue((prevVal) => {\n      if (prevVal.length < passcode.length) {\n        const newValue = prevVal + char.toString();\n        return newValue;\n      } else {\n        return prevVal;\n      }\n    });\n  };\n\n  const dotAnimation = useAnimation();\n\n  useEffect(() => {\n    console.log(inputValue);\n    if (inputValue.length === passcode.length) {\n      if (inputValue === passcode) {\n        setIsUnlocked(true);\n        dotAnimation.start({\n          opacity: 0,\n          transition: { duration: 0.3, delay: 0.2 },\n        });\n        setTimeout(() => {\n          onSuccess();\n        }, 750);\n      } else {\n        setInputValue(\"\");\n\n        dotAnimation.start({\n          x: [10, -10, 10, -10, 10, -10, 10, -10, 0],\n          transition: { duration: 0.5 },\n        });\n      }\n    }\n  }, [inputValue]);\n\n  return (\n    <Wrapper\n      key=\"unlock-screen\"\n      variants={variants}\n      intial=\"hidden\"\n      animate=\"visible\"\n      exit=\"hidden\"\n    >\n      <StatusBar />\n      <LockStatusContainer>\n        {isUnlocked ? <IoMdUnlock /> : <IoMdLock />}\n        <LockBigText>Enter Passcode</LockBigText>\n        <LockSmallText>\n          Your passcode is required to unlock this device\n        </LockSmallText>\n      </LockStatusContainer>\n      <DotsContainer animate={dotAnimation} initial={{ opacity: 1 }}>\n        <div>{inputValue.length >= 1 ? <FaCircle /> : <FaRegCircle />}</div>\n        <div>{inputValue.length >= 2 ? <FaCircle /> : <FaRegCircle />}</div>\n        <div>{inputValue.length >= 3 ? <FaCircle /> : <FaRegCircle />}</div>\n        <div>{inputValue.length >= 4 ? <FaCircle /> : <FaRegCircle />}</div>\n      </DotsContainer>\n      <PasscodeInputWrapper>\n        <div\n          style={{\n            gridRow: \"1\",\n            gridColumn: \"1\",\n            width: 0,\n            paddingBottom: \"100%\",\n          }}\n        />\n        {[...Array(10)].map((e, i) => (\n          <button\n            key={i}\n            onClick={(event) => handlePasscodeInput(event, (i + 1) % 10)}\n          >\n            {(i + 1) % 10}\n          </button>\n        ))}\n      </PasscodeInputWrapper>\n      <CancelButton\n        onClick={() => {\n          dispatch({ type: ActionTypes.setState, payload: \"LOCKSCREEN\" });\n        }}\n      >\n        Cancel\n      </CancelButton>\n    </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}