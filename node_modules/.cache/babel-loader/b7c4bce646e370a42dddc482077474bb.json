{"ast":null,"code":"import React, { useReducer } from \"react\";\nexport const ActionTypes = {\n  unlocked: \"UNLOCKED\",\n  setState: \"SET_STATE\",\n  completePuzzle: \"COMPLETE_PUZZLE\"\n}; //States: ['HIDDEN', 'MAP', 'LOCKSCREEN', 'LOCKSCREEN.UNLOCK', 'HOME', 'PLAYER', 'TINDAWG', 'SLACK', 'PHONE', ]\n\nexport const StateContext = React.createContext();\n\nconst useApplicationState = () => {\n  const initialState = {\n    unlocked: false,\n    appState: \"HOME\",\n    completedPuzzles: []\n  };\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case ActionTypes.unlocked:\n        return { ...state,\n          unlocked: true\n        };\n\n      case ActionTypes.setState:\n        console.log(`State change: ${action.payload}`);\n        return { ...state,\n          appState: action.payload\n        };\n\n      case ActionTypes.completePuzzle:\n        return { ...state,\n          completedPuzzles: [...state.completedPuzzles, action.payload]\n        };\n\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return {\n    state,\n    dispatch\n  };\n};\n\nexport default useApplicationState;","map":{"version":3,"sources":["/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/util/useApplicationState.js"],"names":["React","useReducer","ActionTypes","unlocked","setState","completePuzzle","StateContext","createContext","useApplicationState","initialState","appState","completedPuzzles","reducer","state","action","type","console","log","payload","dispatch"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,QAAQ,EAAE,UADe;AAEzBC,EAAAA,QAAQ,EAAE,WAFe;AAGzBC,EAAAA,cAAc,EAAE;AAHS,CAApB,C,CAMP;;AAEA,OAAO,MAAMC,YAAY,GAAGN,KAAK,CAACO,aAAN,EAArB;;AAEP,MAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAMC,YAAY,GAAG;AACnBN,IAAAA,QAAQ,EAAE,KADS;AAEnBO,IAAAA,QAAQ,EAAE,MAFS;AAGnBC,IAAAA,gBAAgB,EAAE;AAHC,GAArB;;AAMA,QAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,YAAQA,MAAM,CAACC,IAAf;AACE,WAAKb,WAAW,CAACC,QAAjB;AACE,eAAO,EACL,GAAGU,KADE;AAELV,UAAAA,QAAQ,EAAE;AAFL,SAAP;;AAIF,WAAKD,WAAW,CAACE,QAAjB;AACEY,QAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBH,MAAM,CAACI,OAAQ,EAA5C;AAEA,eAAO,EACL,GAAGL,KADE;AAELH,UAAAA,QAAQ,EAAEI,MAAM,CAACI;AAFZ,SAAP;;AAIF,WAAKhB,WAAW,CAACG,cAAjB;AACE,eAAO,EACL,GAAGQ,KADE;AAELF,UAAAA,gBAAgB,EAAE,CAAC,GAAGE,KAAK,CAACF,gBAAV,EAA4BG,MAAM,CAACI,OAAnC;AAFb,SAAP;;AAIF;AACE,eAAOL,KAAP;AAnBJ;AAqBD,GAtBD;;AAwBA,QAAM,CAACA,KAAD,EAAQM,QAAR,IAAoBlB,UAAU,CAACW,OAAD,EAAUH,YAAV,CAApC;AAEA,SAAO;AAAEI,IAAAA,KAAF;AAASM,IAAAA;AAAT,GAAP;AACD,CAlCD;;AAoCA,eAAeX,mBAAf","sourcesContent":["import React, { useReducer } from \"react\";\n\nexport const ActionTypes = {\n  unlocked: \"UNLOCKED\",\n  setState: \"SET_STATE\",\n  completePuzzle: \"COMPLETE_PUZZLE\",\n};\n\n//States: ['HIDDEN', 'MAP', 'LOCKSCREEN', 'LOCKSCREEN.UNLOCK', 'HOME', 'PLAYER', 'TINDAWG', 'SLACK', 'PHONE', ]\n\nexport const StateContext = React.createContext();\n\nconst useApplicationState = () => {\n  const initialState = {\n    unlocked: false,\n    appState: \"HOME\",\n    completedPuzzles: [],\n  };\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case ActionTypes.unlocked:\n        return {\n          ...state,\n          unlocked: true,\n        };\n      case ActionTypes.setState:\n        console.log(`State change: ${action.payload}`);\n\n        return {\n          ...state,\n          appState: action.payload,\n        };\n      case ActionTypes.completePuzzle:\n        return {\n          ...state,\n          completedPuzzles: [...state.completedPuzzles, action.payload],\n        };\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return { state, dispatch };\n};\n\nexport default useApplicationState;\n"]},"metadata":{},"sourceType":"module"}