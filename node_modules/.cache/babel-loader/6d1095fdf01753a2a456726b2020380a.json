{"ast":null,"code":"var _jsxFileName = \"/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/panels/BombRoom.js\";\nimport React, { useContext, useState, useEffect, useRef } from \"react\";\nimport { Container as InteractiveImageContainer } from \"../shared/interactive-image\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { StateContext, ActionTypes } from \"../util/useApplicationState\";\nimport styled from \"styled-components\";\nconst Container = styled(InteractiveImageContainer)`\n  background-image: url(\"/office/bombdefusalUI.jpg\");\n`;\nconst InputWrapper = styled.div`\n  position: absolute;\n  left: 18.5%;\n  right: 18.5%;\n  top: 80%;\n  bottom: 14.5%;\n\n  display: grid;\n  grid-template: 1fr / repeat(4, 1fr);\n  grid-gap: 3.5%;\n\n  & > input {\n    color: #000;\n    border: none;\n    text-transform: uppercase;\n  }\n`;\nconst unlockCode = [\"stay\", \"hom\", \"fur\", \"evr\"];\nexport default function BombRoom() {\n  const [dataInput, _setDataInput] = useState([\"\", \"\", \"\", \"\"]);\n  const timeoutRef = useRef();\n\n  const setData = (index, value) => {\n    _setDataInput(prevVal => {\n      const newArr = [...prevVal];\n      newArr[index] = value;\n      return newArr;\n    });\n  };\n\n  useEffect(() => {\n    const isValid = dataInput.every((value, index) => unlockCode[index].toLowerCase() === value.toLowerCase());\n\n    if (isValid) {\n      timeoutRef.current = setTimeout(() => {\n        alert(\"Puzzle unlocked\");\n      }, 250);\n    }\n  }, [dataInput]);\n  useEffect(() => () => timeoutRef.current && clearTimeout(timeoutRef.current), []);\n  return /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(InputWrapper, null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: dataInput[0],\n    onChange: e => setData(0, e.target.value)\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: dataInput[1],\n    onChange: e => setData(1, e.target.value)\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: dataInput[2],\n    onChange: e => setData(2, e.target.value)\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: dataInput[3],\n    onChange: e => setData(3, e.target.value)\n  })));\n}","map":{"version":3,"sources":["/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/panels/BombRoom.js"],"names":["React","useContext","useState","useEffect","useRef","Container","InteractiveImageContainer","Link","useHistory","StateContext","ActionTypes","styled","InputWrapper","div","unlockCode","BombRoom","dataInput","_setDataInput","timeoutRef","setData","index","value","prevVal","newArr","isValid","every","toLowerCase","current","setTimeout","alert","clearTimeout","e","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,SAASC,SAAS,IAAIC,yBAAtB,QAAuD,6BAAvD;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,6BAA1C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMN,SAAS,GAAGM,MAAM,CAACL,yBAAD,CAA4B;AACpD;AACA,CAFA;AAIA,MAAMM,YAAY,GAAGD,MAAM,CAACE,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAkBA,MAAMC,UAAU,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,EAAuB,KAAvB,CAAnB;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAM,CAACC,SAAD,EAAYC,aAAZ,IAA6Bf,QAAQ,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAD,CAA3C;AACA,QAAMgB,UAAU,GAAGd,MAAM,EAAzB;;AAEA,QAAMe,OAAO,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAChCJ,IAAAA,aAAa,CAAEK,OAAD,IAAa;AACzB,YAAMC,MAAM,GAAG,CAAC,GAAGD,OAAJ,CAAf;AACAC,MAAAA,MAAM,CAACH,KAAD,CAAN,GAAgBC,KAAhB;AACA,aAAOE,MAAP;AACD,KAJY,CAAb;AAKD,GAND;;AAQApB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,OAAO,GAAGR,SAAS,CAACS,KAAV,CACd,CAACJ,KAAD,EAAQD,KAAR,KAAkBN,UAAU,CAACM,KAAD,CAAV,CAAkBM,WAAlB,OAAoCL,KAAK,CAACK,WAAN,EADxC,CAAhB;;AAIA,QAAIF,OAAJ,EAAa;AACXN,MAAAA,UAAU,CAACS,OAAX,GAAqBC,UAAU,CAAC,MAAM;AACpCC,QAAAA,KAAK,CAAC,iBAAD,CAAL;AACD,OAF8B,EAE5B,GAF4B,CAA/B;AAGD;AACF,GAVQ,EAUN,CAACb,SAAD,CAVM,CAAT;AAYAb,EAAAA,SAAS,CACP,MAAM,MAAMe,UAAU,CAACS,OAAX,IAAsBG,YAAY,CAACZ,UAAU,CAACS,OAAZ,CADvC,EAEP,EAFO,CAAT;AAKA,sBACE,oBAAC,SAAD,qBACE,oBAAC,YAAD,qBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEX,SAAS,CAAC,CAAD,CAFlB;AAGE,IAAA,QAAQ,EAAGe,CAAD,IAAOZ,OAAO,CAAC,CAAD,EAAIY,CAAC,CAACC,MAAF,CAASX,KAAb;AAH1B,IADF,eAME;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEL,SAAS,CAAC,CAAD,CAFlB;AAGE,IAAA,QAAQ,EAAGe,CAAD,IAAOZ,OAAO,CAAC,CAAD,EAAIY,CAAC,CAACC,MAAF,CAASX,KAAb;AAH1B,IANF,eAWE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEL,SAAS,CAAC,CAAD,CAFlB;AAGE,IAAA,QAAQ,EAAGe,CAAD,IAAOZ,OAAO,CAAC,CAAD,EAAIY,CAAC,CAACC,MAAF,CAASX,KAAb;AAH1B,IAXF,eAgBE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEL,SAAS,CAAC,CAAD,CAFlB;AAGE,IAAA,QAAQ,EAAGe,CAAD,IAAOZ,OAAO,CAAC,CAAD,EAAIY,CAAC,CAACC,MAAF,CAASX,KAAb;AAH1B,IAhBF,CADF,CADF;AA0BD","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport { Container as InteractiveImageContainer } from \"../shared/interactive-image\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { StateContext, ActionTypes } from \"../util/useApplicationState\";\nimport styled from \"styled-components\";\n\nconst Container = styled(InteractiveImageContainer)`\n  background-image: url(\"/office/bombdefusalUI.jpg\");\n`;\n\nconst InputWrapper = styled.div`\n  position: absolute;\n  left: 18.5%;\n  right: 18.5%;\n  top: 80%;\n  bottom: 14.5%;\n\n  display: grid;\n  grid-template: 1fr / repeat(4, 1fr);\n  grid-gap: 3.5%;\n\n  & > input {\n    color: #000;\n    border: none;\n    text-transform: uppercase;\n  }\n`;\n\nconst unlockCode = [\"stay\", \"hom\", \"fur\", \"evr\"];\n\nexport default function BombRoom() {\n  const [dataInput, _setDataInput] = useState([\"\", \"\", \"\", \"\"]);\n  const timeoutRef = useRef();\n\n  const setData = (index, value) => {\n    _setDataInput((prevVal) => {\n      const newArr = [...prevVal];\n      newArr[index] = value;\n      return newArr;\n    });\n  };\n\n  useEffect(() => {\n    const isValid = dataInput.every(\n      (value, index) => unlockCode[index].toLowerCase() === value.toLowerCase()\n    );\n\n    if (isValid) {\n      timeoutRef.current = setTimeout(() => {\n        alert(\"Puzzle unlocked\");\n      }, 250);\n    }\n  }, [dataInput]);\n\n  useEffect(\n    () => () => timeoutRef.current && clearTimeout(timeoutRef.current),\n    []\n  );\n\n  return (\n    <Container>\n      <InputWrapper>\n        <input\n          type=\"text\"\n          value={dataInput[0]}\n          onChange={(e) => setData(0, e.target.value)}\n        />\n        <input\n          type=\"text\"\n          value={dataInput[1]}\n          onChange={(e) => setData(1, e.target.value)}\n        />\n        <input\n          type=\"text\"\n          value={dataInput[2]}\n          onChange={(e) => setData(2, e.target.value)}\n        />\n        <input\n          type=\"text\"\n          value={dataInput[3]}\n          onChange={(e) => setData(3, e.target.value)}\n        />\n      </InputWrapper>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}