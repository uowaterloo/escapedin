{"ast":null,"code":"var _jsxFileName = \"/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/apps/tindawg/swiper.js\";\nimport React, { useMemo, useState } from \"react\";\nimport TinderCard from \"react-tinder-card\";\nimport { useSequentialSelections } from \"../map-view/utils\";\nimport { ImCross } from \"react-icons/im\";\nimport { IoHeartSharp } from \"react-icons/io5\";\nimport { FaUndoAlt } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { CardContainer, Card, ButtonsContainer, ActionButton, SwiperContainer, EmptyCard } from \"./swiper.styles\";\nconst db = [{\n  name: \"Duke\",\n  url: \"/tindawg_pets/06_dog.jpg\"\n}, {\n  name: \"Pupcake\",\n  url: \"/tindawg_pets/05_dog.jpg\"\n}, {\n  name: \"Sphinx\",\n  url: \"/tindawg_pets/04_cat.jpg\"\n}, {\n  name: \"Croissant\",\n  url: \"/tindawg_pets/03_cat.jpg\"\n}, {\n  name: \"Fido\",\n  url: \"/tindawg_pets/02_dog.jpg\"\n}, {\n  name: \"Biscuit\",\n  url: \"/tindawg_pets/01_cat.jpg\"\n}];\nconst expectedSequence = [\"left\", \"right\", \"left\", \"left\", \"right\", \"right\"];\nexport default function TindawgSwiper({\n  onSuccess = () => null\n}) {\n  const [characters, setCharacters] = useState([]);\n  const [removedCharacters, setRemovedCharacters] = useState([]);\n  const [sequence, addToSequence] = useSequentialSelections(expectedSequence);\n\n  const reset = () => {\n    addToSequence(null);\n    setCharacters(db);\n    setRemovedCharacters([]);\n  };\n\n  React.useEffect(() => {\n    reset(); // eslint-disable-next-line\n  }, []);\n  const childRefs = useMemo(() => characters.reduce((acc, curr) => {\n    acc[curr.name] = React.createRef();\n    return acc;\n  }, {}), [characters]);\n  const swiped = React.useCallback((direction, nameToDelete) => {\n    addToSequence(direction);\n    setRemovedCharacters(prevState => [...prevState, nameToDelete]);\n  }, // eslint-disable-next-line\n  [setRemovedCharacters, characters]);\n  const outOfFrame = React.useCallback(name => {\n    setCharacters(prevState => prevState.filter(character => character.name !== name));\n  }, // eslint-disable-next-line\n  [setCharacters, characters]);\n  const swipe = React.useCallback(dir => {\n    const cardsLeft = characters.filter(person => !removedCharacters.includes(person.name));\n\n    if (cardsLeft.length) {\n      const toBeRemoved = cardsLeft[cardsLeft.length - 1].name; // Find the card object to be removed\n\n      setRemovedCharacters(prevState => [...prevState, toBeRemoved]); // Make sure the next card gets removed next time if this card do not have time to exit the screen\n\n      if (childRefs[toBeRemoved] && childRefs[toBeRemoved].current) {\n        childRefs[toBeRemoved].current.swipe(dir); // Swipe the card!\n      }\n    }\n  }, // eslint-disable-next-line\n  [characters, setRemovedCharacters, removedCharacters, db]);\n  React.useEffect(() => {\n    if (sequence.length === expectedSequence.length) {\n      onSuccess();\n    } // eslint-disable-next-line\n\n  }, [sequence]);\n  return /*#__PURE__*/React.createElement(SwiperContainer, null, /*#__PURE__*/React.createElement(CardContainer, {\n    isEmpty: characters.length > 0\n  }, characters.length > 0 ? characters.map((character, index) => /*#__PURE__*/React.createElement(TinderCard, {\n    ref: childRefs[character.name],\n    className: \"swipe\",\n    key: character.name,\n    onSwipe: dir => swiped(dir, character.name),\n    onCardLeftScreen: () => outOfFrame(character.name)\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      backgroundImage: \"url(\" + character.url + \")\"\n    },\n    className: \"card\"\n  }, /*#__PURE__*/React.createElement(\"h3\", null, character.name)))) : /*#__PURE__*/React.createElement(AnimatePresence, null, /*#__PURE__*/React.createElement(EmptyCard, {\n    initial: {\n      opacity: 0,\n      scale: 0.3\n    },\n    animate: {\n      opacity: 1,\n      scale: 1\n    },\n    exit: {\n      opacity: 0,\n      scale: 0\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/tindawg_alpha.png\",\n    alt: \"logo\"\n  }), /*#__PURE__*/React.createElement(\"p\", null, \"Can't sniff out any matches? Try standing out from the background!\")))), /*#__PURE__*/React.createElement(ButtonsContainer, null, /*#__PURE__*/React.createElement(IconContext.Provider, {\n    value: {\n      color: \"#F63654\"\n    }\n  }, /*#__PURE__*/React.createElement(ActionButton, {\n    onClick: () => swipe(\"left\"),\n    disabled: characters.length === 0\n  }, /*#__PURE__*/React.createElement(ImCross, null))), /*#__PURE__*/React.createElement(IconContext.Provider, {\n    value: {\n      color: \"#F8B10D\"\n    }\n  }, /*#__PURE__*/React.createElement(ActionButton, {\n    onClick: () => reset()\n  }, /*#__PURE__*/React.createElement(FaUndoAlt, null))), /*#__PURE__*/React.createElement(IconContext.Provider, {\n    value: {\n      color: \"#30E5A5\"\n    }\n  }, /*#__PURE__*/React.createElement(ActionButton, {\n    onClick: () => swipe(\"right\"),\n    disabled: characters.length === 0\n  }, /*#__PURE__*/React.createElement(IoHeartSharp, null)))));\n}","map":{"version":3,"sources":["/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/apps/tindawg/swiper.js"],"names":["React","useMemo","useState","TinderCard","useSequentialSelections","ImCross","IoHeartSharp","FaUndoAlt","IconContext","AnimatePresence","CardContainer","Card","ButtonsContainer","ActionButton","SwiperContainer","EmptyCard","db","name","url","expectedSequence","TindawgSwiper","onSuccess","characters","setCharacters","removedCharacters","setRemovedCharacters","sequence","addToSequence","reset","useEffect","childRefs","reduce","acc","curr","createRef","swiped","useCallback","direction","nameToDelete","prevState","outOfFrame","filter","character","swipe","dir","cardsLeft","person","includes","length","toBeRemoved","current","map","index","backgroundImage","opacity","scale","color"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport TinderCard from \"react-tinder-card\";\nimport { useSequentialSelections } from \"../map-view/utils\";\nimport { ImCross } from \"react-icons/im\";\nimport { IoHeartSharp } from \"react-icons/io5\";\nimport { FaUndoAlt } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\nimport { AnimatePresence } from \"framer-motion\";\nimport {\n  CardContainer,\n  Card,\n  ButtonsContainer,\n  ActionButton,\n  SwiperContainer,\n  EmptyCard,\n} from \"./swiper.styles\";\n\nconst db = [\n  {\n    name: \"Duke\",\n    url: \"/tindawg_pets/06_dog.jpg\",\n  },\n  {\n    name: \"Pupcake\",\n    url: \"/tindawg_pets/05_dog.jpg\",\n  },\n  {\n    name: \"Sphinx\",\n    url: \"/tindawg_pets/04_cat.jpg\",\n  },\n  {\n    name: \"Croissant\",\n    url: \"/tindawg_pets/03_cat.jpg\",\n  },\n  {\n    name: \"Fido\",\n    url: \"/tindawg_pets/02_dog.jpg\",\n  },\n  {\n    name: \"Biscuit\",\n    url: \"/tindawg_pets/01_cat.jpg\",\n  },\n];\n\nconst expectedSequence = [\"left\", \"right\", \"left\", \"left\", \"right\", \"right\"];\n\nexport default function TindawgSwiper({ onSuccess = () => null }) {\n  const [characters, setCharacters] = useState([]);\n  const [removedCharacters, setRemovedCharacters] = useState([]);\n  const [sequence, addToSequence] = useSequentialSelections(expectedSequence);\n\n  const reset = () => {\n    addToSequence(null);\n    setCharacters(db);\n    setRemovedCharacters([]);\n  };\n\n  React.useEffect(() => {\n    reset();\n    // eslint-disable-next-line\n  }, []);\n\n  const childRefs = useMemo(\n    () =>\n      characters.reduce((acc, curr) => {\n        acc[curr.name] = React.createRef();\n        return acc;\n      }, {}),\n    [characters]\n  );\n\n  const swiped = React.useCallback(\n    (direction, nameToDelete) => {\n      addToSequence(direction);\n\n      setRemovedCharacters((prevState) => [...prevState, nameToDelete]);\n    },\n    // eslint-disable-next-line\n    [setRemovedCharacters, characters]\n  );\n\n  const outOfFrame = React.useCallback(\n    (name) => {\n      setCharacters((prevState) =>\n        prevState.filter((character) => character.name !== name)\n      );\n    },\n    // eslint-disable-next-line\n    [setCharacters, characters]\n  );\n\n  const swipe = React.useCallback(\n    (dir) => {\n      const cardsLeft = characters.filter(\n        (person) => !removedCharacters.includes(person.name)\n      );\n      if (cardsLeft.length) {\n        const toBeRemoved = cardsLeft[cardsLeft.length - 1].name; // Find the card object to be removed\n        setRemovedCharacters((prevState) => [...prevState, toBeRemoved]);\n        // Make sure the next card gets removed next time if this card do not have time to exit the screen\n\n        if (childRefs[toBeRemoved] && childRefs[toBeRemoved].current) {\n          childRefs[toBeRemoved].current.swipe(dir); // Swipe the card!\n        }\n      }\n    },\n    // eslint-disable-next-line\n    [characters, setRemovedCharacters, removedCharacters, db]\n  );\n\n  React.useEffect(() => {\n    if (sequence.length === expectedSequence.length) {\n      onSuccess();\n    }\n    // eslint-disable-next-line\n  }, [sequence]);\n\n  return (\n    <SwiperContainer>\n      <CardContainer isEmpty={characters.length > 0}>\n        {characters.length > 0 ? (\n          characters.map((character, index) => (\n            <TinderCard\n              ref={childRefs[character.name]}\n              className=\"swipe\"\n              key={character.name}\n              onSwipe={(dir) => swiped(dir, character.name)}\n              onCardLeftScreen={() => outOfFrame(character.name)}\n            >\n              <Card\n                style={{\n                  backgroundImage: \"url(\" + character.url + \")\",\n                }}\n                className=\"card\"\n              >\n                <h3>{character.name}</h3>\n              </Card>\n            </TinderCard>\n          ))\n        ) : (\n          <AnimatePresence>\n            <EmptyCard\n              initial={{ opacity: 0, scale: 0.3 }}\n              animate={{ opacity: 1, scale: 1 }}\n              exit={{ opacity: 0, scale: 0 }}\n            >\n              <img src=\"/icons/tindawg_alpha.png\" alt=\"logo\" />\n              <p>\n                Can't sniff out any matches? Try standing out from the\n                background!\n              </p>\n            </EmptyCard>\n          </AnimatePresence>\n        )}\n      </CardContainer>\n      <ButtonsContainer>\n        <IconContext.Provider value={{ color: \"#F63654\" }}>\n          <ActionButton\n            onClick={() => swipe(\"left\")}\n            disabled={characters.length === 0}\n          >\n            <ImCross />\n          </ActionButton>\n        </IconContext.Provider>\n        <IconContext.Provider value={{ color: \"#F8B10D\" }}>\n          <ActionButton onClick={() => reset()}>\n            <FaUndoAlt />\n          </ActionButton>\n        </IconContext.Provider>\n        <IconContext.Provider value={{ color: \"#30E5A5\" }}>\n          <ActionButton\n            onClick={() => swipe(\"right\")}\n            disabled={characters.length === 0}\n          >\n            <IoHeartSharp />\n          </ActionButton>\n        </IconContext.Provider>\n      </ButtonsContainer>\n    </SwiperContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}