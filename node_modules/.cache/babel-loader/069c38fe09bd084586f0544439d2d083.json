{"ast":null,"code":"var _jsxFileName = \"/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/apps/dialer.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport StatusBar from \"../shared/statusbar\";\nimport { ImPhone, ImPhoneHangUp } from \"react-icons/im\";\nimport StateContainer from \"../shared/state-container\";\nimport Sound from \"react-sound\";\nimport { useStopwatch } from \"react-timer-hook\";\nconst Wrapper = styled(StateContainer)`\n  width: 100%;\n  height: 100%;\n  background-color: white;\n  backdrop-filter: blur(8px) contrast(1.5) brightness(0.6);\n  z-index: 1;\n  color: black;\n  opacity: 0;\n  position: relative;\n`;\nconst PasscodeInputWrapper = styled.div`\n  display: grid;\n  margin: 0 20%;\n\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-auto-rows: 1fr;\n  grid-row-gap: 5%;\n  grid-column-gap: 10%;\n\n  & > button {\n    background-color: lightgrey;\n    backdrop-filter: brightness(2);\n    border: none;\n    color: black;\n    border-radius: 50%;\n    align-self: center;\n    justify-self: center;\n    width: 100%;\n    height: 100%;\n    cursor: pointer;\n    user-select: none;\n\n    :nth-child(2) {\n      grid-row: 1;\n      grid-column: 1;\n    }\n\n    :hover {\n      backdrop-filter: brightness(2.5) opacity(0.5);\n    }\n\n    :focus {\n      outline: none;\n      border: none;\n    }\n  }\n\n  & > .phoneIcon {\n    background: limegreen;\n  }\n\n  & > .hangUpIcon {\n    background: orangered;\n  }\n\n  & > .deleteButton {\n    background-image: url(./icons/cancel_button.png);\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: 100%;\n    background-color: transparent;\n  }\n\n  & > .clearButton {\n    background: transparent;\n  }\n`;\nconst PhoneInputView = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 100%;\n  align-items: center;\n  position: relative;\n  max-width: 100%;\n  min-height: 100px;\n  overflow: hidden;\n  cursor: pointer;\n  justify-content: center;\n`;\nexport default function PhoneView(props) {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [callState, setCallState] = useState(\"INPUT\"); // INPUT, DIALING, TRANSITION, FAILURE, SUCCESS\n\n  const isCalling = callState !== \"INPUT\";\n  const {\n    seconds,\n    start,\n    reset\n  } = useStopwatch();\n  const formattedTime = seconds < 10 ? `00:0${seconds}` : `00:${seconds}`;\n  useEffect(() => {\n    switch (callState) {\n      case \"SUCCESS\":\n      case \"FAILURE\":\n        reset();\n        start();\n        break;\n\n      case \"TRANSITION\":\n        if (inputValue === \"519-745-2222\") {\n          setCallState(\"SUCCESS\");\n        } else {\n          setCallState(\"FAILURE\");\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  }, [callState]);\n\n  const handlePhoneInput = (event, char) => {\n    event.stopPropagation();\n    event.preventDefault();\n    setInputValue(prevVal => {\n      if (prevVal.length === 12) {\n        return prevVal;\n      }\n\n      if (prevVal.length === 3 || prevVal.length === 7) {\n        prevVal += \"-\";\n      }\n\n      return prevVal + char.toString();\n    });\n  };\n\n  const deletePhoneInput = () => {\n    setInputValue(prevVal => {\n      return prevVal.slice(0, -1);\n    });\n  };\n\n  const hangUp = () => {\n    setCallState(\"INPUT\");\n  };\n\n  const call = () => {\n    setCallState(\"DIALING\");\n  };\n\n  const phoneInputs = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"*\", \"0\", \"#\"];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Sound, {\n    url: \"/audio/phone_dialing.mp3\",\n    playStatus: callState === \"DIALING\" ? \"PLAYING\" : \"STOPPED\",\n    onFinishedPlaying: () => setCallState(\"TRANSITION\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Sound, {\n    url: \"/audio/phone_fail.mp3\",\n    playStatus: callState === \"FAILURE\" ? \"PLAYING\" : \"STOPPED\",\n    onFinishedPlaying: () => setCallState(\"INPUT\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Sound, {\n    url: \"/audio/morse_code.wav\",\n    playStatus: callState === \"SUCCESS\" ? \"PLAYING\" : \"STOPPED\",\n    onFinishedPlaying: () => setCallState(\"INPUT\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Wrapper, {\n    key: \"phone-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StatusBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PhoneInputView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"center\",\n      fontSize: \"24px\",\n      fontWeight: \"700\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, inputValue), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, callState === \"DIALING\" ? \"Connecting...\" : callState !== \"INPUT\" ? formattedTime : \"\")), /*#__PURE__*/React.createElement(PasscodeInputWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      gridRow: \"1\",\n      gridColumn: \"1\",\n      width: 0,\n      paddingBottom: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }), phoneInputs.map((e, i) => /*#__PURE__*/React.createElement(\"button\", {\n    key: i,\n    onClick: event => {\n      handlePhoneInput(event, phoneInputs[i]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, phoneInputs[i])), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clearButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }), callState === \"INPUT\" ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"phoneIcon\",\n    onClick: () => {\n      call();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ImPhone, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"hangUpIcon\",\n    onClick: () => {\n      hangUp();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ImPhoneHangUp, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"deleteButton\",\n    onClick: () => {\n      deletePhoneInput();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/apps/dialer.js"],"names":["React","useState","useEffect","styled","StatusBar","ImPhone","ImPhoneHangUp","StateContainer","Sound","useStopwatch","Wrapper","PasscodeInputWrapper","div","PhoneInputView","PhoneView","props","inputValue","setInputValue","callState","setCallState","isCalling","seconds","start","reset","formattedTime","handlePhoneInput","event","char","stopPropagation","preventDefault","prevVal","length","toString","deletePhoneInput","slice","hangUp","call","phoneInputs","textAlign","fontSize","fontWeight","marginTop","gridRow","gridColumn","width","paddingBottom","map","e","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport StatusBar from \"../shared/statusbar\";\nimport { ImPhone, ImPhoneHangUp } from \"react-icons/im\";\nimport StateContainer from \"../shared/state-container\";\nimport Sound from \"react-sound\";\nimport { useStopwatch } from \"react-timer-hook\";\n\nconst Wrapper = styled(StateContainer)`\n  width: 100%;\n  height: 100%;\n  background-color: white;\n  backdrop-filter: blur(8px) contrast(1.5) brightness(0.6);\n  z-index: 1;\n  color: black;\n  opacity: 0;\n  position: relative;\n`;\n\nconst PasscodeInputWrapper = styled.div`\n  display: grid;\n  margin: 0 20%;\n\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-auto-rows: 1fr;\n  grid-row-gap: 5%;\n  grid-column-gap: 10%;\n\n  & > button {\n    background-color: lightgrey;\n    backdrop-filter: brightness(2);\n    border: none;\n    color: black;\n    border-radius: 50%;\n    align-self: center;\n    justify-self: center;\n    width: 100%;\n    height: 100%;\n    cursor: pointer;\n    user-select: none;\n\n    :nth-child(2) {\n      grid-row: 1;\n      grid-column: 1;\n    }\n\n    :hover {\n      backdrop-filter: brightness(2.5) opacity(0.5);\n    }\n\n    :focus {\n      outline: none;\n      border: none;\n    }\n  }\n\n  & > .phoneIcon {\n    background: limegreen;\n  }\n\n  & > .hangUpIcon {\n    background: orangered;\n  }\n\n  & > .deleteButton {\n    background-image: url(./icons/cancel_button.png);\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: 100%;\n    background-color: transparent;\n  }\n\n  & > .clearButton {\n    background: transparent;\n  }\n`;\n\nconst PhoneInputView = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 100%;\n  align-items: center;\n  position: relative;\n  max-width: 100%;\n  min-height: 100px;\n  overflow: hidden;\n  cursor: pointer;\n  justify-content: center;\n`;\n\nexport default function PhoneView(props) {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [callState, setCallState] = useState(\"INPUT\"); // INPUT, DIALING, TRANSITION, FAILURE, SUCCESS\n  const isCalling = callState !== \"INPUT\";\n  const { seconds, start, reset } = useStopwatch();\n  const formattedTime = seconds < 10 ? `00:0${seconds}` : `00:${seconds}`;\n\n  useEffect(() => {\n    switch (callState) {\n      case \"SUCCESS\":\n      case \"FAILURE\":\n        reset();\n        start();\n        break;\n      case \"TRANSITION\":\n        if (inputValue === \"519-745-2222\") {\n          setCallState(\"SUCCESS\");\n        } else {\n          setCallState(\"FAILURE\");\n        }\n        break;\n      default:\n        break;\n    }\n  }, [callState]);\n\n  const handlePhoneInput = (event, char) => {\n    event.stopPropagation();\n    event.preventDefault();\n\n    setInputValue((prevVal) => {\n      if (prevVal.length === 12) {\n        return prevVal;\n      }\n\n      if (prevVal.length === 3 || prevVal.length === 7) {\n        prevVal += \"-\";\n      }\n\n      return prevVal + char.toString();\n    });\n  };\n\n  const deletePhoneInput = () => {\n    setInputValue((prevVal) => {\n      return prevVal.slice(0, -1);\n    });\n  };\n\n  const hangUp = () => {\n    setCallState(\"INPUT\");\n  };\n\n  const call = () => {\n    setCallState(\"DIALING\");\n  };\n\n  const phoneInputs = [\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"*\",\n    \"0\",\n    \"#\",\n  ];\n\n  return (\n    <>\n      <Sound\n        url=\"/audio/phone_dialing.mp3\"\n        playStatus={callState === \"DIALING\" ? \"PLAYING\" : \"STOPPED\"}\n        onFinishedPlaying={() => setCallState(\"TRANSITION\")}\n      />\n      <Sound\n        url=\"/audio/phone_fail.mp3\"\n        playStatus={callState === \"FAILURE\" ? \"PLAYING\" : \"STOPPED\"}\n        onFinishedPlaying={() => setCallState(\"INPUT\")}\n      />\n      <Sound\n        url=\"/audio/morse_code.wav\"\n        playStatus={callState === \"SUCCESS\" ? \"PLAYING\" : \"STOPPED\"}\n        onFinishedPlaying={() => setCallState(\"INPUT\")}\n      />\n      <Wrapper key=\"phone-container\">\n        <StatusBar />\n\n        <PhoneInputView>\n          <p\n            style={{\n              textAlign: \"center\",\n              fontSize: \"24px\",\n              fontWeight: \"700\",\n            }}\n          >\n            {inputValue}\n          </p>\n\n          <p style={{ textAlign: \"center\", marginTop: \"8px\" }}>\n            {callState === \"DIALING\"\n              ? \"Connecting...\"\n              : callState !== \"INPUT\"\n              ? formattedTime\n              : \"\"}\n          </p>\n        </PhoneInputView>\n\n        <PasscodeInputWrapper>\n          <div\n            style={{\n              gridRow: \"1\",\n              gridColumn: \"1\",\n              width: 0,\n              paddingBottom: \"100%\",\n            }}\n          />\n          {phoneInputs.map((e, i) => (\n            <button\n              key={i}\n              onClick={(event) => {\n                handlePhoneInput(event, phoneInputs[i]);\n              }}\n            >\n              {phoneInputs[i]}\n            </button>\n          ))}\n          <button className=\"clearButton\"></button>\n          {callState === \"INPUT\" ? (\n            <button\n              className=\"phoneIcon\"\n              onClick={() => {\n                call();\n              }}\n            >\n              <ImPhone color=\"white\" />\n            </button>\n          ) : (\n            <button\n              className=\"hangUpIcon\"\n              onClick={() => {\n                hangUp();\n              }}\n            >\n              <ImPhoneHangUp color=\"white\" />\n            </button>\n          )}\n          <button\n            className=\"deleteButton\"\n            onClick={() => {\n              deletePhoneInput();\n            }}\n          ></button>\n        </PasscodeInputWrapper>\n      </Wrapper>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}