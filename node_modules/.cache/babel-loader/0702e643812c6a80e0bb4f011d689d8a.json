{"ast":null,"code":"var _jsxFileName = \"/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/panels/PetWall.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport InteractiveImage from \"../shared/interactive-image\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { StateContext, ActionTypes } from \"../util/useApplicationState\";\nimport styled from \"styled-components\";\nconst InputContainer = styled.div`\n  display: flex;\n  input {\n    margin-right: 24px;\n  }\n  p {\n    margin-right: 12px;\n  }\n`;\nexport default function PetWall() {\n  const history = useHistory();\n  const [codeInput1, setCodeInput1] = useState(\"\");\n  const [codeInput2, setCodeInput2] = useState(\"\");\n  const [codeInput3, setCodeInput3] = useState(\"\");\n  const [input1, setInput1] = useState(\"\");\n  const [input2, setInput2] = useState(\"\");\n  const [input3, setInput3] = useState(\"\");\n  const [colorState, setColorState] = useState(\"white\");\n  const {\n    state: {\n      completedPuzzles\n    },\n    dispatch\n  } = useContext(StateContext);\n  const isPuzzleComplete = completedPuzzles.includes(\"PETWALL\");\n\n  const markComplete = () => setTimeout(dispatch({\n    type: ActionTypes.completePuzzle,\n    payload: \"PETWALL\"\n  }), 1000);\n\n  useEffect(() => {\n    if (codeInput1 == \"6\" && codeInput2 == \"5\" && codeInput3 == \"10\") {\n      setTimeout(() => {\n        //dispatch({ type: \"SET_STATE\", payload: \"PE\" });\n        history.push(\"/pet_wall_answer\");\n      }, 150);\n    } else if (codeInput1 > \" \" || codeInput2 > \" \" || codeInput3 > \" \") {\n      setTimeout(() => {\n        setColorState(\"red\");\n      }, 500);\n    }\n  }, [codeInput1]);\n  return !isPuzzleComplete ? /*#__PURE__*/React.createElement(InteractiveImage, {\n    animationPlay: true,\n    src: \"./office/pet_wall_original.png\"\n  }, /*#__PURE__*/React.createElement(InputContainer, null, /*#__PURE__*/React.createElement(\"p\", null, \"Dog Code:\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: input1,\n    onChange: e => {\n      setInput1(e.target.value);\n      setColorState(\"white\");\n    },\n    style: {\n      backgroundColor: colorState\n    },\n    type: \"number\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: input2,\n    onChange: e => {\n      setInput2(e.target.value);\n      setColorState(\"white\");\n    },\n    style: {\n      backgroundColor: colorState\n    },\n    type: \"number\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: input3,\n    onChange: e => {\n      setInput3(e.target.value);\n      setColorState(\"white\");\n    },\n    style: {\n      backgroundColor: colorState\n    },\n    type: \"number\"\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setCodeInput1(input1);\n      setCodeInput2(input2);\n      setCodeInput3(input3);\n    }\n  }, \"Enter Code\"))) : /*#__PURE__*/React.createElement(PetWallAnswer, null);\n}\nexport function PetWallAnswer() {\n  return /*#__PURE__*/React.createElement(InteractiveImage, {\n    src: \"./office/pet_wall_answer.png\"\n  });\n}","map":{"version":3,"sources":["/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/panels/PetWall.js"],"names":["React","useContext","useState","useEffect","InteractiveImage","Link","useHistory","StateContext","ActionTypes","styled","InputContainer","div","PetWall","history","codeInput1","setCodeInput1","codeInput2","setCodeInput2","codeInput3","setCodeInput3","input1","setInput1","input2","setInput2","input3","setInput3","colorState","setColorState","state","completedPuzzles","dispatch","isPuzzleComplete","includes","markComplete","setTimeout","type","completePuzzle","payload","push","e","target","value","backgroundColor","PetWallAnswer"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport InteractiveImage from \"../shared/interactive-image\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { StateContext, ActionTypes } from \"../util/useApplicationState\";\nimport styled from \"styled-components\";\n\nconst InputContainer = styled.div`\n  display: flex;\n  input {\n    margin-right: 24px;\n  }\n  p {\n    margin-right: 12px;\n  }\n`;\n\nexport default function PetWall() {\n  const history = useHistory();\n  const [codeInput1, setCodeInput1] = useState(\"\");\n  const [codeInput2, setCodeInput2] = useState(\"\");\n  const [codeInput3, setCodeInput3] = useState(\"\");\n  const [input1, setInput1] = useState(\"\");\n  const [input2, setInput2] = useState(\"\");\n  const [input3, setInput3] = useState(\"\");\n  const [colorState, setColorState] = useState(\"white\");\n\n  const {\n    state: { completedPuzzles },\n    dispatch,\n  } = useContext(StateContext);\n\n  const isPuzzleComplete = completedPuzzles.includes(\"PETWALL\");\n  const markComplete = () =>\n    setTimeout(\n      dispatch({ type: ActionTypes.completePuzzle, payload: \"PETWALL\" }),\n      1000\n    );\n\n\n  useEffect(() => {\n    if (codeInput1 == \"6\" && codeInput2== \"5\" && codeInput3 == \"10\") {\n      setTimeout(() => {\n        //dispatch({ type: \"SET_STATE\", payload: \"PE\" });\n\n        history.push(\"/pet_wall_answer\");\n      }, 150);\n    }\n    else if (codeInput1 > \" \" ||  codeInput2 > \" \" || codeInput3 > \" \"){\n      setTimeout(() => {\n        setColorState(\"red\");\n      }, 500);\n    }\n  }, [codeInput1]);\n\n  return (\n    !isPuzzleComplete ? (\n    <InteractiveImage animationPlay={true} src=\"./office/pet_wall_original.png\">\n      <InputContainer>\n        <p>Dog Code:</p>\n        <input\n          value={input1}\n          onChange={(e) => {\n            setInput1(e.target.value);\n            setColorState(\"white\");\n          }}\n          style={{ backgroundColor: colorState }}\n          type=\"number\"\n        \n        />\n        <input\n          value={input2}\n          onChange={(e) => {\n            setInput2(e.target.value);\n            setColorState(\"white\");\n          }}\n          style={{ backgroundColor: colorState }}\n          type=\"number\"\n        \n        />\n        <input\n          value={input3}\n          onChange={(e) => {\n            setInput3(e.target.value);\n            setColorState(\"white\");\n          }}\n          style={{ backgroundColor: colorState }}\n          type=\"number\"\n\n        />\n        <button\n          onClick={() => {\n            setCodeInput1(input1);\n            setCodeInput2(input2);\n            setCodeInput3(input3);\n          }}\n        >\n          Enter Code\n        </button>\n      </InputContainer>\n    </InteractiveImage>) : <PetWallAnswer />\n  );\n}\n\nexport function PetWallAnswer() {\n  return (\n    <InteractiveImage src=\"./office/pet_wall_answer.png\"></InteractiveImage>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}