{"ast":null,"code":"var _jsxFileName = \"/Users/raghavsethi/Desktop/webspring/src/components/panels/door-lock.js\";\nimport React, { useMemo, useEffect, useState, useContext } from \"react\";\nimport InteractiveImage from \"../shared/interactive-image\";\nimport { ImVolumeMedium, ImVolumeMute2 } from \"react-icons/im\";\nimport useSequentialSelections from \"../util/useSequentialSelections\";\nimport Sound from \"react-sound\";\nimport { useHistory } from \"react-router-dom\";\nimport { StateContext, ActionTypes } from \"../util/useApplicationState\";\nimport Button from \"../shared/button\";\nconst expectedSequence = [4, 1, 0, 2, 0, 1, 8];\nexport default function DoorLockPuzzle() {\n  const [sequence, updateSequence] = useSequentialSelections(expectedSequence);\n  const [isMuted, setMuted] = useState(false);\n  const [hasInteracted, setInteracted] = useState(false);\n  const history = useHistory();\n  const {\n    state: {\n      completedPuzzles\n    },\n    dispatch\n  } = useContext(StateContext);\n\n  if (completedPuzzles.includes(\"DOOR_PUZZLE\")) {\n    history.push(\"/bomb_room\");\n  }\n\n  const onInteract = () => {\n    if (!hasInteracted) {\n      setInteracted(true);\n    }\n  };\n\n  useEffect(() => {\n    console.log(sequence);\n\n    if (sequence.length === expectedSequence.length) {\n      //Victory condition\n      dispatch({\n        type: ActionTypes.completePuzzle,\n        payload: \"DOOR_PUZZLE\"\n      });\n    }\n  }, [sequence]);\n  const ClickableRegions = useMemo(() => [{\n    key: 1,\n    x: [20, 25],\n    y: [35.3, 41.2],\n    onClick: () => updateSequence(1)\n  }, {\n    key: 2,\n    x: [25.4, 30.7],\n    y: [35.5, 41.5],\n    onClick: () => updateSequence(2)\n  }, {\n    key: 3,\n    x: [31.1, 35.8],\n    y: [36.1, 41.7],\n    onClick: () => updateSequence(3)\n  }, {\n    key: 4,\n    x: [36.5, 41.4],\n    y: [36.1, 42.1],\n    onClick: () => updateSequence(4)\n  }, {\n    key: 5,\n    x: [41.9, 47.0],\n    y: [36.5, 42.1],\n    onClick: () => updateSequence(5)\n  }, {\n    key: 6,\n    x: [20.5, 25.6],\n    y: [42.0, 47.4],\n    onClick: () => updateSequence(6)\n  }, {\n    key: 7,\n    x: [26.3, 30.7],\n    y: [42.2, 47.8],\n    onClick: () => updateSequence(7)\n  }, {\n    key: 8,\n    x: [31.4, 35.8],\n    y: [42.2, 47.8],\n    onClick: () => updateSequence(8)\n  }, {\n    key: 9,\n    x: [36.6, 41.4],\n    y: [42.6, 48.1],\n    onClick: () => updateSequence(9)\n  }, {\n    key: 0,\n    x: [42.0, 46.8],\n    y: [42.7, 48.4],\n    onClick: () => updateSequence(0)\n  }], [updateSequence]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Sound, {\n    url: \"/audio/countdown.mp3\",\n    playStatus: hasInteracted ? \"PLAYING\" : \"STOPPED\",\n    volume: isMuted ? 0 : 50,\n    loop: true\n  }), /*#__PURE__*/React.createElement(InteractiveImage, {\n    areas: ClickableRegions,\n    src: \"/office/door_lock.jpg\",\n    pointer: true,\n    onMouseMove: onInteract\n  }, /*#__PURE__*/React.createElement(\"p\", null, \"Unlock the door to proceed.\"), /*#__PURE__*/React.createElement(Button.IconButton, {\n    onClick: () => setMuted(x => !x)\n  }, isMuted ? /*#__PURE__*/React.createElement(ImVolumeMute2, null) : /*#__PURE__*/React.createElement(ImVolumeMedium, null))));\n}","map":{"version":3,"sources":["/Users/raghavsethi/Desktop/webspring/src/components/panels/door-lock.js"],"names":["React","useMemo","useEffect","useState","useContext","InteractiveImage","ImVolumeMedium","ImVolumeMute2","useSequentialSelections","Sound","useHistory","StateContext","ActionTypes","Button","expectedSequence","DoorLockPuzzle","sequence","updateSequence","isMuted","setMuted","hasInteracted","setInteracted","history","state","completedPuzzles","dispatch","includes","push","onInteract","console","log","length","type","completePuzzle","payload","ClickableRegions","key","x","y","onClick"],"mappings":"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","sourcesContent":["import React, { useMemo, useEffect, useState, useContext } from \"react\";\nimport InteractiveImage from \"../shared/interactive-image\";\nimport { ImVolumeMedium, ImVolumeMute2 } from \"react-icons/im\";\nimport useSequentialSelections from \"../util/useSequentialSelections\";\nimport Sound from \"react-sound\";\nimport { useHistory } from \"react-router-dom\";\nimport { StateContext, ActionTypes } from \"../util/useApplicationState\";\nimport Button from \"../shared/button\";\n\nconst expectedSequence = [4, 1, 0, 2, 0, 1, 8];\n\nexport default function DoorLockPuzzle() {\n  const [sequence, updateSequence] = useSequentialSelections(expectedSequence);\n\n  const [isMuted, setMuted] = useState(false);\n  const [hasInteracted, setInteracted] = useState(false);\n  const history = useHistory();\n\n  const {\n    state: { completedPuzzles },\n    dispatch,\n  } = useContext(StateContext);\n\n  if (completedPuzzles.includes(\"DOOR_PUZZLE\")) {\n    history.push(\"/bomb_room\");\n  }\n\n  const onInteract = () => {\n    if (!hasInteracted) {\n      setInteracted(true);\n    }\n  };\n\n  useEffect(() => {\n    console.log(sequence);\n\n    if (sequence.length === expectedSequence.length) {\n      //Victory condition\n      dispatch({ type: ActionTypes.completePuzzle, payload: \"DOOR_PUZZLE\" });\n    }\n  }, [sequence]);\n\n  const ClickableRegions = useMemo(\n    () => [\n      {\n        key: 1,\n        x: [20, 25],\n        y: [35.3, 41.2],\n        onClick: () => updateSequence(1),\n      },\n      {\n        key: 2,\n        x: [25.4, 30.7],\n        y: [35.5, 41.5],\n        onClick: () => updateSequence(2),\n      },\n      {\n        key: 3,\n        x: [31.1, 35.8],\n        y: [36.1, 41.7],\n        onClick: () => updateSequence(3),\n      },\n      {\n        key: 4,\n        x: [36.5, 41.4],\n        y: [36.1, 42.1],\n        onClick: () => updateSequence(4),\n      },\n      {\n        key: 5,\n        x: [41.9, 47.0],\n        y: [36.5, 42.1],\n        onClick: () => updateSequence(5),\n      },\n      {\n        key: 6,\n        x: [20.5, 25.6],\n        y: [42.0, 47.4],\n        onClick: () => updateSequence(6),\n      },\n      {\n        key: 7,\n        x: [26.3, 30.7],\n        y: [42.2, 47.8],\n        onClick: () => updateSequence(7),\n      },\n      {\n        key: 8,\n        x: [31.4, 35.8],\n        y: [42.2, 47.8],\n        onClick: () => updateSequence(8),\n      },\n      {\n        key: 9,\n        x: [36.6, 41.4],\n        y: [42.6, 48.1],\n        onClick: () => updateSequence(9),\n      },\n      {\n        key: 0,\n        x: [42.0, 46.8],\n        y: [42.7, 48.4],\n        onClick: () => updateSequence(0),\n      },\n    ],\n    [updateSequence]\n  );\n\n  return (\n    <>\n      <Sound\n        url=\"/audio/countdown.mp3\"\n        playStatus={hasInteracted ? \"PLAYING\" : \"STOPPED\"}\n        volume={isMuted ? 0 : 50}\n        loop\n      />\n      <InteractiveImage\n        areas={ClickableRegions}\n        src=\"/office/door_lock.jpg\"\n        pointer\n        onMouseMove={onInteract}\n      >\n        <p>Unlock the door to proceed.</p>\n        <Button.IconButton onClick={() => setMuted((x) => !x)}>\n          {isMuted ? <ImVolumeMute2 /> : <ImVolumeMedium />}\n        </Button.IconButton>\n      </InteractiveImage>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}