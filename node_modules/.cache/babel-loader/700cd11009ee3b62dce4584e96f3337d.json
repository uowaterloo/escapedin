{"ast":null,"code":"var _jsxFileName = \"/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/apps/tindawg/index.js\";\nimport React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport StateContainer from \"../../shared/state-container\";\nimport TindawgSwiper from \"./swiper\";\nimport Message from \"./message\";\nimport { StateContext, ActionTypes } from \"../../util/useApplicationState\";\nconst Container = styled(StateContainer)`\n  background-color: #f0f0f0;\n  display: grid;\n  grid-template: auto 1fr / 1fr;\n`;\nconst BannerImage = styled.img`\n  width: 100%;\n  max-height: 48px;\n  object-fit: contain;\n  padding: 10px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.125);\n  background-color: #fff;\n  z-index: 1;\n`;\nexport default function TindawgState() {\n  const {\n    state: {\n      completedPuzzles\n    },\n    dispatch\n  } = useContext(StateContext);\n  const isPuzzleComplete = completedPuzzles.includes(\"TINDAWG\");\n\n  const markComplete = () => setTimeout(dispatch({\n    type: ActionTypes.completePuzzle,\n    payload: \"TINDAWG\"\n  }), 1000);\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BannerImage, {\n    src: \"/icons/tindawg_banner.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), isPuzzleComplete ? /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(TindawgSwiper, {\n    onSuccess: markComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/apps/tindawg/index.js"],"names":["React","useContext","styled","StateContainer","TindawgSwiper","Message","StateContext","ActionTypes","Container","BannerImage","img","TindawgState","state","completedPuzzles","dispatch","isPuzzleComplete","includes","markComplete","setTimeout","type","completePuzzle","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,aAAP,MAA0B,UAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,gCAA1C;AAEA,MAAMC,SAAS,GAAGN,MAAM,CAACC,cAAD,CAAiB;;;;CAAzC;AAMA,MAAMM,WAAW,GAAGP,MAAM,CAACQ,GAAI;;;;;;;;CAA/B;AAUA,eAAe,SAASC,YAAT,GAAwB;AACrC,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KADH;AAEJC,IAAAA;AAFI,MAGFb,UAAU,CAACK,YAAD,CAHd;AAKA,QAAMS,gBAAgB,GAAGF,gBAAgB,CAACG,QAAjB,CAA0B,SAA1B,CAAzB;;AACA,QAAMC,YAAY,GAAG,MACnBC,UAAU,CACRJ,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAEZ,WAAW,CAACa,cAApB;AAAoCC,IAAAA,OAAO,EAAE;AAA7C,GAAD,CADA,EAER,IAFQ,CADZ;;AAMA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAC,2BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGN,gBAAgB,gBACf,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADe,gBAGf,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAEE,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADF;AAUD","sourcesContent":["import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport StateContainer from \"../../shared/state-container\";\nimport TindawgSwiper from \"./swiper\";\nimport Message from \"./message\";\nimport { StateContext, ActionTypes } from \"../../util/useApplicationState\";\n\nconst Container = styled(StateContainer)`\n  background-color: #f0f0f0;\n  display: grid;\n  grid-template: auto 1fr / 1fr;\n`;\n\nconst BannerImage = styled.img`\n  width: 100%;\n  max-height: 48px;\n  object-fit: contain;\n  padding: 10px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.125);\n  background-color: #fff;\n  z-index: 1;\n`;\n\nexport default function TindawgState() {\n  const {\n    state: { completedPuzzles },\n    dispatch,\n  } = useContext(StateContext);\n\n  const isPuzzleComplete = completedPuzzles.includes(\"TINDAWG\");\n  const markComplete = () =>\n    setTimeout(\n      dispatch({ type: ActionTypes.completePuzzle, payload: \"TINDAWG\" }),\n      1000\n    );\n\n  return (\n    <Container>\n      <BannerImage src=\"/icons/tindawg_banner.png\" />\n      {isPuzzleComplete ? (\n        <Message />\n      ) : (\n        <TindawgSwiper onSuccess={markComplete} />\n      )}\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}