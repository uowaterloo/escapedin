{"ast":null,"code":"var _jsxFileName = \"/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/panels/fantasy-wall.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport InteractiveImage from \"../shared/interactive-image\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { StateContext, ActionTypes } from \"../util/useApplicationState\";\nimport styled from \"styled-components\";\nconst InputContainer = styled.div`\n  display: flex;\n  input {\n    margin-right: 24px;\n  }\n\n  p {\n    margin-right: 12px;\n  }\n`;\nexport default function FantasyWall() {\n  const history = useHistory();\n  const {\n    state,\n    dispatch\n  } = useContext(StateContext);\n  const [codeInput1, setCodeInput1] = useState(\"\");\n  const [input1, setInput1] = useState(\"\");\n  const [codeInput2, setCodeInput2] = useState(\"\");\n  const [input2, setInput2] = useState(\"\");\n  const [codeInput3, setCodeInput3] = useState(\"\");\n  const [input3, setInput3] = useState(\"\");\n  const [colorState, setColorState] = useState(\"white\");\n  const [backgroundPath, setBackgroundPath] = useState(\"./office/FantasyMap.png\");\n  useEffect(() => {\n    if (codeInput == \"n3i6u5\" || codeInput == \"N3I6U5\") {\n      setTimeout(() => {\n        //dispatch({ type: \"SET_STATE\", payload: \"LOCKSCREEN\" });\n        // history.push(\"/pet_wall_answer\");\n        //   setBackgroundPath(\n        //     \"https://media.giphy.com/media/yXBqba0Zx8S4/giphy.gif\"\n        //   );\n        setBackgroundPath(\"https://cdn.dribbble.com/users/2143961/screenshots/4248258/evr-crypto00.jpg\");\n      }, 150);\n    } else if (codeInput > \" \") {\n      setTimeout(() => {\n        setBackgroundPath(\"https://media.giphy.com/media/fADmG2Wc1EYGqgUbE8/giphy.gif\");\n        setColorState(\"red\");\n      }, 0);\n      setTimeout(() => {\n        setBackgroundPath(\"./office/FantasyMap.png\");\n      }, 2000);\n    }\n  }, [codeInput]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InteractiveImage, {\n    animationPlay: true,\n    src: backgroundPath\n  }, /*#__PURE__*/React.createElement(InputContainer, null, /*#__PURE__*/React.createElement(\"p\", null, \"Grid Code:\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: input1,\n    onChange: e => {\n      setInput1(e.target.value);\n      setColorState(\"white\");\n    },\n    style: {\n      backgroundColor: colorState\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: input2,\n    onChange: e => {\n      setInput2(e.target.value);\n      setColorState(\"white\");\n    },\n    style: {\n      backgroundColor: colorState\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: input3,\n    onChange: e => {\n      setInput3(e.target.value);\n      setColorState(\"white\");\n    },\n    style: {\n      backgroundColor: colorState\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setCodeInput1(input1);\n      setCodeInput2(input2);\n      setCodeInput1(input3);\n    }\n  }, \"Enter Code\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (backgroundPath == \"./office/FantasyMap.png\") setBackgroundPath(\"./office/morse_scroll_minimal.png\");else setBackgroundPath(\"./office/FantasyMap.png\");\n    }\n  }, \"Toogle Scroll\"))));\n}","map":{"version":3,"sources":["/Users/raghavsethi/Desktop/mappedin/software/webspring/src/components/panels/fantasy-wall.js"],"names":["React","useContext","useState","useEffect","InteractiveImage","Link","useHistory","StateContext","ActionTypes","styled","InputContainer","div","FantasyWall","history","state","dispatch","codeInput1","setCodeInput1","input1","setInput1","codeInput2","setCodeInput2","input2","setInput2","codeInput3","setCodeInput3","input3","setInput3","colorState","setColorState","backgroundPath","setBackgroundPath","codeInput","setTimeout","e","target","value","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,6BAA1C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,cAAc,GAAGD,MAAM,CAACE,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,eAAe,SAASC,WAAT,GAAuB;AACpC,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM;AAAEQ,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBd,UAAU,CAACM,YAAD,CAAtC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACoB,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACsB,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACwB,MAAD,EAASC,SAAT,IAAsBzB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC0B,UAAD,EAAaC,aAAb,IAA8B3B,QAAQ,CAAC,OAAD,CAA5C;AACA,QAAM,CAAC4B,cAAD,EAAiBC,iBAAjB,IAAsC7B,QAAQ,CAClD,yBADkD,CAApD;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6B,SAAS,IAAI,QAAb,IAAyBA,SAAS,IAAI,QAA1C,EAAoD;AAClDC,MAAAA,UAAU,CAAC,MAAM;AACf;AACA;AACA;AACA;AACA;AAEAF,QAAAA,iBAAiB,CACf,6EADe,CAAjB;AAGD,OAVS,EAUP,GAVO,CAAV;AAWD,KAZD,MAYO,IAAIC,SAAS,GAAG,GAAhB,EAAqB;AAC1BC,MAAAA,UAAU,CAAC,MAAM;AACfF,QAAAA,iBAAiB,CACf,4DADe,CAAjB;AAGAF,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OALS,EAKP,CALO,CAAV;AAMAI,MAAAA,UAAU,CAAC,MAAM;AACfF,QAAAA,iBAAiB,CAAC,yBAAD,CAAjB;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GAxBQ,EAwBN,CAACC,SAAD,CAxBM,CAAT;AA0BA,sBACE,uDACE,oBAAC,gBAAD;AAAkB,IAAA,aAAa,EAAE,IAAjC;AAAuC,IAAA,GAAG,EAAEF;AAA5C,kBACE,oBAAC,cAAD,qBACE,4CADF,eAEE;AACE,IAAA,KAAK,EAAEZ,MADT;AAEE,IAAA,QAAQ,EAAGgB,CAAD,IAAO;AACff,MAAAA,SAAS,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACAP,MAAAA,aAAa,CAAC,OAAD,CAAb;AACD,KALH;AAME,IAAA,KAAK,EAAE;AAAEQ,MAAAA,eAAe,EAAET;AAAnB;AANT,IAFF,eAUE;AACE,IAAA,KAAK,EAAEN,MADT;AAEE,IAAA,QAAQ,EAAGY,CAAD,IAAO;AACfX,MAAAA,SAAS,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACAP,MAAAA,aAAa,CAAC,OAAD,CAAb;AACD,KALH;AAME,IAAA,KAAK,EAAE;AAAEQ,MAAAA,eAAe,EAAET;AAAnB;AANT,IAVF,eAkBE;AACE,IAAA,KAAK,EAAEF,MADT;AAEE,IAAA,QAAQ,EAAGQ,CAAD,IAAO;AACfP,MAAAA,SAAS,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACAP,MAAAA,aAAa,CAAC,OAAD,CAAb;AACD,KALH;AAME,IAAA,KAAK,EAAE;AAAEQ,MAAAA,eAAe,EAAET;AAAnB;AANT,IAlBF,eA0BE;AACE,IAAA,OAAO,EAAE,MAAM;AACbX,MAAAA,aAAa,CAACC,MAAD,CAAb;AACAG,MAAAA,aAAa,CAACC,MAAD,CAAb;AACAL,MAAAA,aAAa,CAACS,MAAD,CAAb;AACD;AALH,kBA1BF,eAmCE;AACE,IAAA,OAAO,EAAE,MAAM;AACb,UAAII,cAAc,IAAI,yBAAtB,EACEC,iBAAiB,CAAC,mCAAD,CAAjB,CADF,KAEKA,iBAAiB,CAAC,yBAAD,CAAjB;AACN;AALH,qBAnCF,CADF,CADF,CADF;AAmDD","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport InteractiveImage from \"../shared/interactive-image\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { StateContext, ActionTypes } from \"../util/useApplicationState\";\nimport styled from \"styled-components\";\n\nconst InputContainer = styled.div`\n  display: flex;\n  input {\n    margin-right: 24px;\n  }\n\n  p {\n    margin-right: 12px;\n  }\n`;\n\nexport default function FantasyWall() {\n  const history = useHistory();\n  const { state, dispatch } = useContext(StateContext);\n  const [codeInput1, setCodeInput1] = useState(\"\");\n  const [input1, setInput1] = useState(\"\");\n  const [codeInput2, setCodeInput2] = useState(\"\");\n  const [input2, setInput2] = useState(\"\");\n  const [codeInput3, setCodeInput3] = useState(\"\");\n  const [input3, setInput3] = useState(\"\");\n  const [colorState, setColorState] = useState(\"white\");\n  const [backgroundPath, setBackgroundPath] = useState(\n    \"./office/FantasyMap.png\"\n  );\n  useEffect(() => {\n    if (codeInput == \"n3i6u5\" || codeInput == \"N3I6U5\") {\n      setTimeout(() => {\n        //dispatch({ type: \"SET_STATE\", payload: \"LOCKSCREEN\" });\n        // history.push(\"/pet_wall_answer\");\n        //   setBackgroundPath(\n        //     \"https://media.giphy.com/media/yXBqba0Zx8S4/giphy.gif\"\n        //   );\n\n        setBackgroundPath(\n          \"https://cdn.dribbble.com/users/2143961/screenshots/4248258/evr-crypto00.jpg\"\n        );\n      }, 150);\n    } else if (codeInput > \" \") {\n      setTimeout(() => {\n        setBackgroundPath(\n          \"https://media.giphy.com/media/fADmG2Wc1EYGqgUbE8/giphy.gif\"\n        );\n        setColorState(\"red\");\n      }, 0);\n      setTimeout(() => {\n        setBackgroundPath(\"./office/FantasyMap.png\");\n      }, 2000);\n    }\n  }, [codeInput]);\n\n  return (\n    <>\n      <InteractiveImage animationPlay={true} src={backgroundPath}>\n        <InputContainer>\n          <p>Grid Code:</p>\n          <input\n            value={input1}\n            onChange={(e) => {\n              setInput1(e.target.value);\n              setColorState(\"white\");\n            }}\n            style={{ backgroundColor: colorState }}\n          />\n          <input\n            value={input2}\n            onChange={(e) => {\n              setInput2(e.target.value);\n              setColorState(\"white\");\n            }}\n            style={{ backgroundColor: colorState }}\n          />\n          <input\n            value={input3}\n            onChange={(e) => {\n              setInput3(e.target.value);\n              setColorState(\"white\");\n            }}\n            style={{ backgroundColor: colorState }}\n          />\n          <button\n            onClick={() => {\n              setCodeInput1(input1);\n              setCodeInput2(input2);\n              setCodeInput1(input3);\n            }}\n          >\n            Enter Code\n          </button>\n          <button\n            onClick={() => {\n              if (backgroundPath == \"./office/FantasyMap.png\")\n                setBackgroundPath(\"./office/morse_scroll_minimal.png\");\n              else setBackgroundPath(\"./office/FantasyMap.png\");\n            }}\n          >\n            Toogle Scroll\n          </button>\n        </InputContainer>\n      </InteractiveImage>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}